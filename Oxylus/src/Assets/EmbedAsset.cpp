#include "EmbedAsset.h"

#include <fstream>
#include <ostream>

#include "Render/Vulkan/VulkanImage.h"
#include "Utils/Log.h"

namespace Oxylus {
  void EmbedAsset::EmbedTexture(const std::string& texFilePath, const std::string& outPath, const std::string& arrayName) {
    uint32_t width, height, bits;
    const auto texture = VulkanImage::LoadStbRawImage(texFilePath, &width, &height, &bits);

    const uint32_t psize = width * height * 4;
    std::ofstream file;
    file.open(outPath);
    file << "// Generated by Oxylus using " << texFilePath << std::endl;
    file << "static constexpr uint32_t " << arrayName << "Width = " << width << ";" << std::endl;
    file << "static constexpr uint32_t " << arrayName << "Height = " << height << ";" << std::endl;
    file << "static constexpr uint8_t " << arrayName << "[] = {" << (int)texture[0];
    for(size_t i = 1; i < psize; ++i)
      file << "," << (int)texture[i];
    file << "};";

    OX_CORE_INFO("Successfully embedded texture {0} into: {1}", texFilePath, outPath);

    file.close();
    delete texture;
  }
}
