#include "EmbedAsset.h"

#include <fstream>
#include <ostream>

#include "Render/Texture.h"
#include "Utils/Log.h"

namespace Oxylus {
void EmbedAsset::EmbedTexture(const std::string& texFilePath, const std::string& outPath, const std::string& arrayName) {
  uint32_t width, height, bits;
  const auto texture = Texture::LoadStbImage(texFilePath, &width, &height, &bits);

  const uint32_t psize = width * height * 4;
  std::ofstream file;
  file.open(outPath);
  file << "// Generated by Oxylus using " << texFilePath << std::endl;
  file << "#pragma once" << std::endl;
  file << "static constexpr unsigned int " << arrayName << "Width = " << width << ";" << std::endl;
  file << "static constexpr unsigned int " << arrayName << "Height = " << height << ";" << std::endl;
  file << "static constexpr unsigned char " << arrayName << "[] = {" << std::endl;
  size_t j = 1;
  for (size_t i = 0; i < psize; ++i) {
    file << (int)texture[i];
    if (i != psize - 1)
      file << ",";
    if (i == 100 * j) {
      file << std::endl;
      j += 1;
    }
  }
  file << "};";

  OX_CORE_INFO("Successfully embedded texture {0} into: {1}", texFilePath, outPath);

  file.close();
  delete texture;
}
}
